{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuAn\\\\TKwebsite3\\\\dynonary-english\\\\frontend\\\\src\\\\components\\\\Flashcard\\\\data.js\",\n  _s = $RefreshSig$();\nimport commonApi from 'apis/commonApi';\nimport flashcardApi from 'apis/flashcardApi';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport Flashcard from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst perPage = 7;\nfunction FlashcardData() {\n  _s();\n  const dispatch = useDispatch();\n  const list = useRef([]); // list store all item to prevent call API when prev button click\n  const [currentList, setCurrentList] = useState([]);\n  const [total, setTotal] = useState(-1);\n  const [pageInfo, setPageInfo] = useState({\n    page: 1,\n    packInfo: {\n      type: '-1',\n      level: '-1',\n      specialty: '-1',\n      topics: []\n    }\n  });\n\n  // get total word pack\n  useEffect(() => {\n    let isSubscribe = true;\n    if (total !== -1) {\n      return;\n    }\n    (async function getTotalWordPack() {\n      try {\n        const apiRes = await commonApi.getWordPackTotal(pageInfo.packInfo);\n        if (apiRes.status === 200 && isSubscribe) {\n          const {\n            total = 0\n          } = apiRes.data;\n          if (total === 0) {\n            dispatch(setMessage({\n              type: 'warning',\n              message: 'Gói từ vựng hiện tại không đủ, vui lòng thử lại sau.',\n              duration: 3000\n            }));\n          }\n          setTotal(total);\n        }\n      } catch (error) {\n        setTotal(0);\n      }\n    })();\n    return () => isSubscribe = false;\n  }, [total]);\n\n  // get word pack when page change\n  useEffect(() => {\n    let isSubscribe = true;\n    if (pageInfo.page < list.current.length / perPage) return; // prevent call API when element already exists in the old array\n\n    async function getFlashcardList() {\n      try {\n        const apiRes = await flashcardApi.getWordPack(pageInfo.page, perPage, pageInfo.packInfo);\n        if (apiRes.status === 200 && isSubscribe) {\n          const {\n            packList = []\n          } = apiRes.data;\n          setCurrentList(packList);\n          list.current = [...list.current, ...packList];\n        }\n      } catch (error) {}\n    }\n    isSubscribe && getFlashcardList();\n    return () => isSubscribe = false;\n  }, [pageInfo]);\n  const handleNextClick = () => {\n    const {\n      page\n    } = pageInfo;\n    if (page < total) {\n      if (pageInfo.page < list.current.length / perPage) {\n        const oldList = list.current.slice(page * perPage, (page + 1) * perPage);\n        setCurrentList(oldList);\n      }\n      setPageInfo({\n        ...pageInfo,\n        page: page + 1\n      });\n    }\n  };\n  const handlePrevClick = () => {\n    const {\n      page\n    } = pageInfo;\n    if (page > 1) {\n      const oldList = list.current.slice((page - 2) * perPage, (page - 1) * perPage);\n      setCurrentList(oldList);\n      setPageInfo({\n        ...pageInfo,\n        page: page - 1\n      });\n    }\n  };\n  const onWordPackChange = newPackInfo => {\n    const {\n      packInfo\n    } = pageInfo;\n\n    // check the similarity\n    let isSame = true;\n    const {\n      topics\n    } = newPackInfo;\n    isSame = equalArray(topics, packInfo.topics);\n    for (let k in packInfo) {\n      if (k !== 'topics' && packInfo[k] !== newPackInfo[k]) {\n        isSame = false;\n        break;\n      }\n    }\n    if (isSame) return;\n\n    // reset and call API\n    list.current = [];\n    setPageInfo({\n      page: 1,\n      packInfo: newPackInfo\n    });\n    setTotal(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(Flashcard, {\n    list: currentList,\n    total: total,\n    currentPage: pageInfo.page,\n    onNextPage: handleNextClick,\n    onPrevPage: handlePrevClick,\n    onWordPackChange: onWordPackChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardData, \"454NxXMeJ5sB2vlIIKALA1iNRMM=\", false, function () {\n  return [useDispatch];\n});\n_c = FlashcardData;\nexport default FlashcardData;\nvar _c;\n$RefreshReg$(_c, \"FlashcardData\");","map":{"version":3,"names":["commonApi","flashcardApi","equalArray","React","useEffect","useRef","useState","useDispatch","setMessage","Flashcard","jsxDEV","_jsxDEV","perPage","FlashcardData","_s","dispatch","list","currentList","setCurrentList","total","setTotal","pageInfo","setPageInfo","page","packInfo","type","level","specialty","topics","isSubscribe","getTotalWordPack","apiRes","getWordPackTotal","status","data","message","duration","error","current","length","getFlashcardList","getWordPack","packList","handleNextClick","oldList","slice","handlePrevClick","onWordPackChange","newPackInfo","isSame","k","currentPage","onNextPage","onPrevPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DuAn/TKwebsite3/dynonary-english/frontend/src/components/Flashcard/data.js"],"sourcesContent":["import commonApi from 'apis/commonApi';\r\nimport flashcardApi from 'apis/flashcardApi';\r\nimport { equalArray } from 'helper';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMessage } from 'redux/slices/message.slice';\r\nimport Flashcard from '.';\r\n\r\nconst perPage = 7;\r\n\r\nfunction FlashcardData() {\r\n  const dispatch = useDispatch();\r\n  const list = useRef([]); // list store all item to prevent call API when prev button click\r\n  const [currentList, setCurrentList] = useState([]);\r\n  const [total, setTotal] = useState(-1);\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 1,\r\n    packInfo: {\r\n      type: '-1',\r\n      level: '-1',\r\n      specialty: '-1',\r\n      topics: [],\r\n    },\r\n  });\r\n\r\n  // get total word pack\r\n  useEffect(() => {\r\n    let isSubscribe = true;\r\n\r\n    if (total !== -1) {\r\n      return;\r\n    }\r\n\r\n    (async function getTotalWordPack() {\r\n      try {\r\n        const apiRes = await commonApi.getWordPackTotal(pageInfo.packInfo);\r\n\r\n        if (apiRes.status === 200 && isSubscribe) {\r\n          const { total = 0 } = apiRes.data;\r\n          if (total === 0) {\r\n            dispatch(\r\n              setMessage({\r\n                type: 'warning',\r\n                message: 'Gói từ vựng hiện tại không đủ, vui lòng thử lại sau.',\r\n                duration: 3000,\r\n              }),\r\n            );\r\n          }\r\n          setTotal(total);\r\n        }\r\n      } catch (error) {\r\n        setTotal(0);\r\n      }\r\n    })();\r\n\r\n    return () => (isSubscribe = false);\r\n  }, [total]);\r\n\r\n  // get word pack when page change\r\n  useEffect(() => {\r\n    let isSubscribe = true;\r\n    if (pageInfo.page < list.current.length / perPage) return; // prevent call API when element already exists in the old array\r\n\r\n    async function getFlashcardList() {\r\n      try {\r\n        const apiRes = await flashcardApi.getWordPack(\r\n          pageInfo.page,\r\n          perPage,\r\n          pageInfo.packInfo,\r\n        );\r\n\r\n        if (apiRes.status === 200 && isSubscribe) {\r\n          const { packList = [] } = apiRes.data;\r\n          setCurrentList(packList);\r\n          list.current = [...list.current, ...packList];\r\n        }\r\n      } catch (error) {}\r\n    }\r\n\r\n    isSubscribe && getFlashcardList();\r\n\r\n    return () => (isSubscribe = false);\r\n  }, [pageInfo]);\r\n\r\n  const handleNextClick = () => {\r\n    const { page } = pageInfo;\r\n    if (page < total) {\r\n      if (pageInfo.page < list.current.length / perPage) {\r\n        const oldList = list.current.slice(\r\n          page * perPage,\r\n          (page + 1) * perPage,\r\n        );\r\n        setCurrentList(oldList);\r\n      }\r\n      setPageInfo({ ...pageInfo, page: page + 1 });\r\n    }\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    const { page } = pageInfo;\r\n    if (page > 1) {\r\n      const oldList = list.current.slice(\r\n        (page - 2) * perPage,\r\n        (page - 1) * perPage,\r\n      );\r\n      setCurrentList(oldList);\r\n      setPageInfo({ ...pageInfo, page: page - 1 });\r\n    }\r\n  };\r\n\r\n  const onWordPackChange = (newPackInfo) => {\r\n    const { packInfo } = pageInfo;\r\n\r\n    // check the similarity\r\n    let isSame = true;\r\n    const { topics } = newPackInfo;\r\n    isSame = equalArray(topics, packInfo.topics);\r\n    for (let k in packInfo) {\r\n      if (k !== 'topics' && packInfo[k] !== newPackInfo[k]) {\r\n        isSame = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isSame) return;\r\n\r\n    // reset and call API\r\n    list.current = [];\r\n    setPageInfo({\r\n      page: 1,\r\n      packInfo: newPackInfo,\r\n    });\r\n    setTotal(-1);\r\n  };\r\n\r\n  return (\r\n    <Flashcard\r\n      list={currentList}\r\n      total={total}\r\n      currentPage={pageInfo.page}\r\n      onNextPage={handleNextClick}\r\n      onPrevPage={handlePrevClick}\r\n      onWordPackChange={onWordPackChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FlashcardData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}