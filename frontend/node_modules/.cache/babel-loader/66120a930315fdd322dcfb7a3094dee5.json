{"ast":null,"code":"import axiosClient from './axiosClient';\nconst URL = '/account';\nconst accountApi = {\n  postRegisterAccount: (email, name, password) => {\n    return axiosClient.post(`${URL}/register`, {\n      email,\n      name,\n      password\n    });\n  },\n  postLogin: (email, password) => {\n    return axiosClient.post(`${URL}/login`, {\n      email,\n      password\n    });\n  },\n  postLoginWithGoogle: access_token => {\n    return axiosClient.post(`${URL}/login-gg`, {\n      access_token\n    });\n  },\n  postLoginWithFacebook: access_token => {\n    return axiosClient.post(`${URL}/login-fb`, {\n      access_token\n    });\n  },\n  postLogout: () => {\n    return axiosClient.post(`${URL}/logout`);\n  },\n  postResetPassword: (email, password, verifyCode) => {\n    return axiosClient.post(`${URL}/reset-password`, {\n      email,\n      password,\n      verifyCode\n    });\n  },\n  putToggleWordFavorite: (username, word, isAdd) => {\n    return axiosClient.put(`${URL}/toggle-favorite`, {\n      username,\n      word,\n      isAdd\n    });\n  },\n  putUpdateUserCoin: newCoin => {\n    return axiosClient.put(`${URL}/update-coin`, {\n      newCoin\n    });\n  },\n  putUpdateAvt: (avtSrc = '') => {\n    return axiosClient.put(`${URL}/update-avt`, {\n      avtSrc\n    });\n  },\n  putUpdateProfile: (name = '', username = '') => {\n    return axiosClient.put(`${URL}/update-profile`, {\n      name,\n      username\n    });\n  },\n  getUserInfo: () => {\n    return axiosClient.get(`${URL}/user-info`);\n  },\n  getSendVerifyCode: email => {\n    return axiosClient.get(`${URL}/send-verify-code`, {\n      params: {\n        email\n      }\n    });\n  },\n  getUserProfile: () => {\n    return axiosClient.get(`${URL}/user-profile`);\n  }\n};\nexport default accountApi;","map":{"version":3,"names":["axiosClient","URL","accountApi","postRegisterAccount","email","name","password","post","postLogin","postLoginWithGoogle","access_token","postLoginWithFacebook","postLogout","postResetPassword","verifyCode","putToggleWordFavorite","username","word","isAdd","put","putUpdateUserCoin","newCoin","putUpdateAvt","avtSrc","putUpdateProfile","getUserInfo","get","getSendVerifyCode","params","getUserProfile"],"sources":["D:/DuAn/thangdoan/dynonary-english/frontend/src/apis/accountApi.js"],"sourcesContent":["import axiosClient from './axiosClient';\r\n\r\nconst URL = '/account';\r\n\r\nconst accountApi = {\r\n  postRegisterAccount: (email, name, password) => {\r\n    return axiosClient.post(`${URL}/register`, { email, name, password });\r\n  },\r\n\r\n  postLogin: (email, password) => {\r\n    return axiosClient.post(`${URL}/login`, { email, password });\r\n  },\r\n\r\n  postLoginWithGoogle: (access_token) => {\r\n    return axiosClient.post(`${URL}/login-gg`, { access_token });\r\n  },\r\n\r\n  postLoginWithFacebook: (access_token) => {\r\n    return axiosClient.post(`${URL}/login-fb`, { access_token });\r\n  },\r\n\r\n  postLogout: () => {\r\n    return axiosClient.post(`${URL}/logout`);\r\n  },\r\n\r\n  postResetPassword: (email, password, verifyCode) => {\r\n    return axiosClient.post(`${URL}/reset-password`, {\r\n      email,\r\n      password,\r\n      verifyCode,\r\n    });\r\n  },\r\n\r\n  putToggleWordFavorite: (username, word, isAdd) => {\r\n    return axiosClient.put(`${URL}/toggle-favorite`, { username, word, isAdd });\r\n  },\r\n\r\n  putUpdateUserCoin: (newCoin) => {\r\n    return axiosClient.put(`${URL}/update-coin`, { newCoin });\r\n  },\r\n\r\n  putUpdateAvt: (avtSrc = '') => {\r\n    return axiosClient.put(`${URL}/update-avt`, { avtSrc });\r\n  },\r\n\r\n  putUpdateProfile: (name = '', username = '') => {\r\n    return axiosClient.put(`${URL}/update-profile`, { name, username });\r\n  },\r\n\r\n  getUserInfo: () => {\r\n    return axiosClient.get(`${URL}/user-info`);\r\n  },\r\n\r\n  getSendVerifyCode: (email) => {\r\n    return axiosClient.get(`${URL}/send-verify-code`, {\r\n      params: { email },\r\n    });\r\n  },\r\n\r\n  getUserProfile: () => {\r\n    return axiosClient.get(`${URL}/user-profile`);\r\n  },\r\n};\r\n\r\nexport default accountApi;\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AAEvC,MAAMC,GAAG,GAAG,UAAU;AAEtB,MAAMC,UAAU,GAAG;EACjBC,mBAAmB,EAAEA,CAACC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IAC9C,OAAON,WAAW,CAACO,IAAI,CAAE,GAAEN,GAAI,WAAU,EAAE;MAAEG,KAAK;MAAEC,IAAI;MAAEC;IAAS,CAAC,CAAC;EACvE,CAAC;EAEDE,SAAS,EAAEA,CAACJ,KAAK,EAAEE,QAAQ,KAAK;IAC9B,OAAON,WAAW,CAACO,IAAI,CAAE,GAAEN,GAAI,QAAO,EAAE;MAAEG,KAAK;MAAEE;IAAS,CAAC,CAAC;EAC9D,CAAC;EAEDG,mBAAmB,EAAGC,YAAY,IAAK;IACrC,OAAOV,WAAW,CAACO,IAAI,CAAE,GAAEN,GAAI,WAAU,EAAE;MAAES;IAAa,CAAC,CAAC;EAC9D,CAAC;EAEDC,qBAAqB,EAAGD,YAAY,IAAK;IACvC,OAAOV,WAAW,CAACO,IAAI,CAAE,GAAEN,GAAI,WAAU,EAAE;MAAES;IAAa,CAAC,CAAC;EAC9D,CAAC;EAEDE,UAAU,EAAEA,CAAA,KAAM;IAChB,OAAOZ,WAAW,CAACO,IAAI,CAAE,GAAEN,GAAI,SAAQ,CAAC;EAC1C,CAAC;EAEDY,iBAAiB,EAAEA,CAACT,KAAK,EAAEE,QAAQ,EAAEQ,UAAU,KAAK;IAClD,OAAOd,WAAW,CAACO,IAAI,CAAE,GAAEN,GAAI,iBAAgB,EAAE;MAC/CG,KAAK;MACLE,QAAQ;MACRQ;IACF,CAAC,CAAC;EACJ,CAAC;EAEDC,qBAAqB,EAAEA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,KAAK;IAChD,OAAOlB,WAAW,CAACmB,GAAG,CAAE,GAAElB,GAAI,kBAAiB,EAAE;MAAEe,QAAQ;MAAEC,IAAI;MAAEC;IAAM,CAAC,CAAC;EAC7E,CAAC;EAEDE,iBAAiB,EAAGC,OAAO,IAAK;IAC9B,OAAOrB,WAAW,CAACmB,GAAG,CAAE,GAAElB,GAAI,cAAa,EAAE;MAAEoB;IAAQ,CAAC,CAAC;EAC3D,CAAC;EAEDC,YAAY,EAAEA,CAACC,MAAM,GAAG,EAAE,KAAK;IAC7B,OAAOvB,WAAW,CAACmB,GAAG,CAAE,GAAElB,GAAI,aAAY,EAAE;MAAEsB;IAAO,CAAC,CAAC;EACzD,CAAC;EAEDC,gBAAgB,EAAEA,CAACnB,IAAI,GAAG,EAAE,EAAEW,QAAQ,GAAG,EAAE,KAAK;IAC9C,OAAOhB,WAAW,CAACmB,GAAG,CAAE,GAAElB,GAAI,iBAAgB,EAAE;MAAEI,IAAI;MAAEW;IAAS,CAAC,CAAC;EACrE,CAAC;EAEDS,WAAW,EAAEA,CAAA,KAAM;IACjB,OAAOzB,WAAW,CAAC0B,GAAG,CAAE,GAAEzB,GAAI,YAAW,CAAC;EAC5C,CAAC;EAED0B,iBAAiB,EAAGvB,KAAK,IAAK;IAC5B,OAAOJ,WAAW,CAAC0B,GAAG,CAAE,GAAEzB,GAAI,mBAAkB,EAAE;MAChD2B,MAAM,EAAE;QAAExB;MAAM;IAClB,CAAC,CAAC;EACJ,CAAC;EAEDyB,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAO7B,WAAW,CAAC0B,GAAG,CAAE,GAAEzB,GAAI,eAAc,CAAC;EAC/C;AACF,CAAC;AAED,eAAeC,UAAU"},"metadata":{},"sourceType":"module"}