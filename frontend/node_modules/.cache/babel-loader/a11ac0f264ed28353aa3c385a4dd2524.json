{"ast":null,"code":"var _s = $RefreshSig$();\nimport { THEME_KEYS } from 'constant';\nimport { setRootPalettes } from 'helper';\nimport { useEffect, useState } from 'react';\nfunction useTheme() {\n  _s();\n  const [theme, setTheme] = useState(THEME_KEYS.LIGHT);\n\n  // get theme in local storage AND set theme to root\n  useEffect(() => {\n    const htmlRoot = document.querySelector(':root');\n    let current = localStorage.getItem(THEME_KEYS.LS_KEY);\n\n    // set default if no theme yet\n    if (current !== THEME_KEYS.LIGHT && current !== THEME_KEYS.DARK && current !== THEME_KEYS.CUSTOM) {\n      current = THEME_KEYS.LIGHT;\n      localStorage.setItem(THEME_KEYS.LS_KEY, THEME_KEYS.LIGHT);\n    }\n\n    // if theme is custom then set color for root\n    if (current === THEME_KEYS.CUSTOM) {\n      setRootPalettes();\n    }\n    htmlRoot.setAttribute(THEME_KEYS.ROOT_KEY, current);\n    setTheme(current);\n  }, []);\n  return theme;\n}\n_s(useTheme, \"K9fL9EvdPqJFoJL4xL+/kSrwOZY=\");\nexport default useTheme;","map":{"version":3,"names":["THEME_KEYS","setRootPalettes","useEffect","useState","useTheme","_s","theme","setTheme","LIGHT","htmlRoot","document","querySelector","current","localStorage","getItem","LS_KEY","DARK","CUSTOM","setItem","setAttribute","ROOT_KEY"],"sources":["D:/DuAn/TKwebsite3/dynonary-english/frontend/src/hooks/useTheme.js"],"sourcesContent":["import { THEME_KEYS } from 'constant';\r\nimport { setRootPalettes } from 'helper';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction useTheme() {\r\n  const [theme, setTheme] = useState(THEME_KEYS.LIGHT);\r\n\r\n  // get theme in local storage AND set theme to root\r\n  useEffect(() => {\r\n    const htmlRoot = document.querySelector(':root');\r\n    let current = localStorage.getItem(THEME_KEYS.LS_KEY);\r\n\r\n    // set default if no theme yet\r\n    if (\r\n      current !== THEME_KEYS.LIGHT &&\r\n      current !== THEME_KEYS.DARK &&\r\n      current !== THEME_KEYS.CUSTOM\r\n    ) {\r\n      current = THEME_KEYS.LIGHT;\r\n      localStorage.setItem(THEME_KEYS.LS_KEY, THEME_KEYS.LIGHT);\r\n    }\r\n\r\n    // if theme is custom then set color for root\r\n    if (current === THEME_KEYS.CUSTOM) {\r\n      setRootPalettes();\r\n    }\r\n\r\n    htmlRoot.setAttribute(THEME_KEYS.ROOT_KEY, current);\r\n    setTheme(current);\r\n  }, []);\r\n\r\n  return theme;\r\n}\r\n\r\nexport default useTheme;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,UAAU;AACrC,SAASC,eAAe,QAAQ,QAAQ;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACH,UAAU,CAACQ,KAAK,CAAC;;EAEpD;EACAN,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAChD,IAAIC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAACd,UAAU,CAACe,MAAM,CAAC;;IAErD;IACA,IACEH,OAAO,KAAKZ,UAAU,CAACQ,KAAK,IAC5BI,OAAO,KAAKZ,UAAU,CAACgB,IAAI,IAC3BJ,OAAO,KAAKZ,UAAU,CAACiB,MAAM,EAC7B;MACAL,OAAO,GAAGZ,UAAU,CAACQ,KAAK;MAC1BK,YAAY,CAACK,OAAO,CAAClB,UAAU,CAACe,MAAM,EAAEf,UAAU,CAACQ,KAAK,CAAC;IAC3D;;IAEA;IACA,IAAII,OAAO,KAAKZ,UAAU,CAACiB,MAAM,EAAE;MACjChB,eAAe,CAAC,CAAC;IACnB;IAEAQ,QAAQ,CAACU,YAAY,CAACnB,UAAU,CAACoB,QAAQ,EAAER,OAAO,CAAC;IACnDL,QAAQ,CAACK,OAAO,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,KAAK;AACd;AAACD,EAAA,CA5BQD,QAAQ;AA8BjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}