{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuAn\\\\TKwebsite3\\\\dynonary-english\\\\frontend\\\\src\\\\components\\\\ForgotPassword\\\\data.js\",\n  _s = $RefreshSig$();\nimport accountApi from 'apis/accountApi';\nimport { ROUTES, UX } from 'constant';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport ForgotPassword from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPasswordData() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [mailSending, setMailSending] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleSendMail = async email => {\n    setMailSending(true);\n    try {\n      const apiRes = await accountApi.getSendVerifyCode(email);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Gửi mã thành công. Hãy kiểm tra email của bạn'\n        }));\n      }\n    } catch (error) {} finally {\n      setMailSending(false);\n    }\n  };\n  const handleResetPassword = async ({\n    email,\n    verifyCode,\n    password\n  }) => {\n    setLoading(true);\n    setMailSending(true);\n    try {\n      const apiRes = await accountApi.postResetPassword(email, password, verifyCode);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Đổi mật khẩu thành công',\n          duration: UX.DELAY_TIME\n        }));\n        setTimeout(() => {\n          history.push(ROUTES.LOGIN);\n        }, UX.DELAY_TIME);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Đổi mật khẩu thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    } finally {\n      setLoading(false);\n      setMailSending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ForgotPassword, {\n    loading: loading,\n    mailSending: mailSending,\n    onSendVerifyCode: handleSendMail,\n    onSubmit: handleResetPassword\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordData, \"hY3t4Yh8p2CpZAAHMRAq/BxBJ98=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = ForgotPasswordData;\nexport default ForgotPasswordData;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordData\");","map":{"version":3,"names":["accountApi","ROUTES","UX","React","useState","useDispatch","useHistory","setMessage","ForgotPassword","jsxDEV","_jsxDEV","ForgotPasswordData","_s","loading","setLoading","mailSending","setMailSending","dispatch","history","handleSendMail","email","apiRes","getSendVerifyCode","status","type","message","error","handleResetPassword","verifyCode","password","postResetPassword","duration","DELAY_TIME","setTimeout","push","LOGIN","_error$response","_error$response$data","response","data","onSendVerifyCode","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DuAn/TKwebsite3/dynonary-english/frontend/src/components/ForgotPassword/data.js"],"sourcesContent":["import accountApi from 'apis/accountApi';\r\nimport { ROUTES, UX } from 'constant';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setMessage } from 'redux/slices/message.slice';\r\nimport ForgotPassword from '.';\r\n\r\nfunction ForgotPasswordData() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [mailSending, setMailSending] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSendMail = async (email) => {\r\n    setMailSending(true);\r\n    try {\r\n      const apiRes = await accountApi.getSendVerifyCode(email);\r\n      if (apiRes.status === 200) {\r\n        dispatch(\r\n          setMessage({\r\n            type: 'success',\r\n            message: 'Gửi mã thành công. Hãy kiểm tra email của bạn',\r\n          }),\r\n        );\r\n      }\r\n    } catch (error) {\r\n    } finally {\r\n      setMailSending(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async ({ email, verifyCode, password }) => {\r\n    setLoading(true);\r\n    setMailSending(true);\r\n    try {\r\n      const apiRes = await accountApi.postResetPassword(\r\n        email,\r\n        password,\r\n        verifyCode,\r\n      );\r\n\r\n      if (apiRes.status === 200) {\r\n        dispatch(\r\n          setMessage({\r\n            type: 'success',\r\n            message: 'Đổi mật khẩu thành công',\r\n            duration: UX.DELAY_TIME,\r\n          }),\r\n        );\r\n        setTimeout(() => {\r\n          history.push(ROUTES.LOGIN);\r\n        }, UX.DELAY_TIME);\r\n      }\r\n    } catch (error) {\r\n      const message =\r\n        error.response?.data?.message || 'Đổi mật khẩu thất bại, thử lại !';\r\n      dispatch(\r\n        setMessage({\r\n          type: 'error',\r\n          message,\r\n        }),\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n      setMailSending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ForgotPassword\r\n      loading={loading}\r\n      mailSending={mailSending}\r\n      onSendVerifyCode={handleSendMail}\r\n      onSubmit={handleResetPassword}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordData;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,SAASC,MAAM,EAAEC,EAAE,QAAQ,UAAU;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,4BAA4B;AACvD,OAAOC,cAAc,MAAM,GAAG;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,OAAO,GAAGZ,UAAU,CAAC,CAAC;EAE5B,MAAMa,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtCJ,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMrB,UAAU,CAACsB,iBAAiB,CAACF,KAAK,CAAC;MACxD,IAAIC,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBN,QAAQ,CACNV,UAAU,CAAC;UACTiB,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE;QACX,CAAC,CACH,CAAC;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;MACRV,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMW,mBAAmB,GAAG,MAAAA,CAAO;IAAEP,KAAK;IAAEQ,UAAU;IAAEC;EAAS,CAAC,KAAK;IACrEf,UAAU,CAAC,IAAI,CAAC;IAChBE,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMrB,UAAU,CAAC8B,iBAAiB,CAC/CV,KAAK,EACLS,QAAQ,EACRD,UACF,CAAC;MAED,IAAIP,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBN,QAAQ,CACNV,UAAU,CAAC;UACTiB,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,yBAAyB;UAClCM,QAAQ,EAAE7B,EAAE,CAAC8B;QACf,CAAC,CACH,CAAC;QACDC,UAAU,CAAC,MAAM;UACff,OAAO,CAACgB,IAAI,CAACjC,MAAM,CAACkC,KAAK,CAAC;QAC5B,CAAC,EAAEjC,EAAE,CAAC8B,UAAU,CAAC;MACnB;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA,IAAAU,eAAA,EAAAC,oBAAA;MACd,MAAMZ,OAAO,GACX,EAAAW,eAAA,GAAAV,KAAK,CAACY,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBZ,OAAO,KAAI,kCAAkC;MACrER,QAAQ,CACNV,UAAU,CAAC;QACTiB,IAAI,EAAE,OAAO;QACbC;MACF,CAAC,CACH,CAAC;IACH,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;MACjBE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEN,OAAA,CAACF,cAAc;IACbK,OAAO,EAAEA,OAAQ;IACjBE,WAAW,EAAEA,WAAY;IACzByB,gBAAgB,EAAErB,cAAe;IACjCsB,QAAQ,EAAEd;EAAoB;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEN;AAACjC,EAAA,CArEQD,kBAAkB;EAAA,QAGRN,WAAW,EACZC,UAAU;AAAA;AAAAwC,EAAA,GAJnBnC,kBAAkB;AAuE3B,eAAeA,kBAAkB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}