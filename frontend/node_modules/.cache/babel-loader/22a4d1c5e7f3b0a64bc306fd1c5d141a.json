{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuAn\\\\thangdoan\\\\dynonary-english\\\\frontend\\\\src\\\\components\\\\UserAccount\\\\data.js\",\n  _s = $RefreshSig$();\nimport accountApi from 'apis/accountApi';\nimport { formatDate } from 'helper';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport { setUserAvt } from 'redux/slices/userInfo.slice';\nimport UserAccount from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserAccountData() {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    email: null,\n    createdDate: null\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        const apiRes = await accountApi.getUserProfile();\n        if (apiRes.status === 200 && isSub) {\n          const {\n            email,\n            createdDate\n          } = apiRes.data;\n          setUserInfo({\n            email,\n            createdDate: formatDate(createdDate)\n          });\n        }\n      } catch (error) {}\n    })();\n    return () => isSub = false;\n  }, []);\n  const handleUploadAvt = async src => {\n    try {\n      const apiRes = await accountApi.putUpdateAvt(src);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Cập nhật ảnh đại diện thành công'\n        }));\n        dispatch(setUserAvt(apiRes.data.newSrc));\n      }\n    } catch (error) {\n      dispatch(setMessage({\n        type: 'error',\n        message: 'Cập nhật ảnh đại diện thất bại. Thử lại'\n      }));\n    }\n  };\n  const handleUpdateProfile = async (name, username) => {\n    try {\n      const apiRes = await accountApi.putUpdateProfile(name, username);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Cập nhật thông tin thành công',\n          duration: 500\n        }));\n        setTimeout(() => {\n          location.reload();\n        }, 750);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Chỉnh sửa thông tin thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserAccount, {\n    email: userInfo.email,\n    createdDate: userInfo.createdDate,\n    onUpload: handleUploadAvt,\n    onUpdateProfile: handleUpdateProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAccountData, \"wUICHCFKWF10ioHJv8Hii3gl/3Q=\", false, function () {\n  return [useDispatch];\n});\n_c = UserAccountData;\nexport default UserAccountData;\nvar _c;\n$RefreshReg$(_c, \"UserAccountData\");","map":{"version":3,"names":["accountApi","formatDate","React","useEffect","useState","useDispatch","setMessage","setUserAvt","UserAccount","jsxDEV","_jsxDEV","UserAccountData","_s","userInfo","setUserInfo","email","createdDate","dispatch","isSub","apiRes","getUserProfile","status","data","error","handleUploadAvt","src","putUpdateAvt","type","message","newSrc","handleUpdateProfile","name","username","putUpdateProfile","duration","setTimeout","location","reload","_error$response","_error$response$data","response","onUpload","onUpdateProfile","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DuAn/thangdoan/dynonary-english/frontend/src/components/UserAccount/data.js"],"sourcesContent":["import accountApi from 'apis/accountApi';\r\nimport { formatDate } from 'helper';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMessage } from 'redux/slices/message.slice';\r\nimport { setUserAvt } from 'redux/slices/userInfo.slice';\r\nimport UserAccount from '.';\r\n\r\nfunction UserAccountData() {\r\n  const [userInfo, setUserInfo] = useState({ email: null, createdDate: null });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let isSub = true;\r\n\r\n    (async function () {\r\n      try {\r\n        const apiRes = await accountApi.getUserProfile();\r\n\r\n        if (apiRes.status === 200 && isSub) {\r\n          const { email, createdDate } = apiRes.data;\r\n          setUserInfo({ email, createdDate: formatDate(createdDate) });\r\n        }\r\n      } catch (error) {}\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, []);\r\n\r\n  const handleUploadAvt = async (src) => {\r\n    try {\r\n      const apiRes = await accountApi.putUpdateAvt(src);\r\n      if (apiRes.status === 200) {\r\n        dispatch(\r\n          setMessage({\r\n            type: 'success',\r\n            message: 'Cập nhật ảnh đại diện thành công',\r\n          }),\r\n        );\r\n\r\n        dispatch(setUserAvt(apiRes.data.newSrc));\r\n      }\r\n    } catch (error) {\r\n      dispatch(\r\n        setMessage({\r\n          type: 'error',\r\n          message: 'Cập nhật ảnh đại diện thất bại. Thử lại',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdateProfile = async (name, username) => {\r\n    try {\r\n      const apiRes = await accountApi.putUpdateProfile(name, username);\r\n      if (apiRes.status === 200) {\r\n        dispatch(\r\n          setMessage({\r\n            type: 'success',\r\n            message: 'Cập nhật thông tin thành công',\r\n            duration: 500,\r\n          }),\r\n        );\r\n\r\n        setTimeout(() => {\r\n          location.reload();\r\n        }, 750);\r\n      }\r\n    } catch (error) {\r\n      const message =\r\n        error.response?.data?.message ||\r\n        'Chỉnh sửa thông tin thất bại, thử lại !';\r\n      dispatch(setMessage({ type: 'error', message }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserAccount\r\n      email={userInfo.email}\r\n      createdDate={userInfo.createdDate}\r\n      onUpload={handleUploadAvt}\r\n      onUpdateProfile={handleUpdateProfile}\r\n    />\r\n  );\r\n}\r\n\r\nexport default UserAccountData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}