{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuAn\\\\thangdoan\\\\dynonary-english\\\\frontend\\\\src\\\\components\\\\CommunicationPhrase\\\\data.js\",\n  _s = $RefreshSig$();\nimport sentenceApi from 'apis/sentenceApi';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport CommunicationPhrase from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst perPage = 20;\nfunction CommunicationPhraseData() {\n  _s();\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [topicList, setTopicList] = useState([]);\n  const totalPage = useRef(0);\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n  const onSelectTopic = topics => {\n    if (!topics || !Array.isArray(topics) || equalArray(topics, topicList)) {\n      return;\n    }\n    setPage(1);\n    setMore(true);\n    setList([]);\n    setTopicList([...topics]);\n    totalPage.current = 0;\n  };\n\n  // get total sentence\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        const apiRes = await sentenceApi.getTotalSentences(topicList);\n        if (apiRes.status === 200 && isSub) {\n          const {\n            total = 0\n          } = apiRes.data;\n          totalPage.current = Math.ceil(total / perPage);\n        }\n      } catch (error) {}\n    })();\n    return () => isSub = false;\n  }, [topicList]);\n\n  // get sentence list\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await sentenceApi.getSentenceList(page, perPage, topicList);\n        if (apiRes.status === 200 && isSub) {\n          const {\n            sentenceList = []\n          } = apiRes.data;\n          setList([...list, ...sentenceList]);\n        }\n      } catch (error) {} finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n    return () => isSub = false;\n  }, [page, topicList]);\n  return /*#__PURE__*/_jsxDEV(CommunicationPhrase, {\n    list: list,\n    isFirstLoad: isFirstLoad,\n    loading: loading,\n    more: more,\n    onLoadData: nextPage,\n    onSelectTopic: v => onSelectTopic(v)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationPhraseData, \"Ynvkvs6kK8OZtnvxkR6mpaZH1mk=\");\n_c = CommunicationPhraseData;\nexport default CommunicationPhraseData;\nvar _c;\n$RefreshReg$(_c, \"CommunicationPhraseData\");","map":{"version":3,"names":["sentenceApi","equalArray","React","useEffect","useRef","useState","CommunicationPhrase","jsxDEV","_jsxDEV","perPage","CommunicationPhraseData","_s","page","setPage","loading","setLoading","list","setList","more","setMore","isFirstLoad","setIsFirstLoad","topicList","setTopicList","totalPage","nextPage","current","onSelectTopic","topics","Array","isArray","isSub","apiRes","getTotalSentences","status","total","data","Math","ceil","error","getSentenceList","sentenceList","onLoadData","v","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DuAn/thangdoan/dynonary-english/frontend/src/components/CommunicationPhrase/data.js"],"sourcesContent":["import sentenceApi from 'apis/sentenceApi';\r\nimport { equalArray } from 'helper';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport CommunicationPhrase from '.';\r\n\r\nconst perPage = 20;\r\n\r\nfunction CommunicationPhraseData() {\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [list, setList] = useState([]);\r\n  const [more, setMore] = useState(true); // toggle infinite scrolling\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n  const [topicList, setTopicList] = useState([]);\r\n  const totalPage = useRef(0);\r\n\r\n  const nextPage = () => {\r\n    if (page < totalPage.current) {\r\n      setPage(page + 1);\r\n    } else {\r\n      setMore(false);\r\n    }\r\n  };\r\n\r\n  const onSelectTopic = (topics) => {\r\n    if (!topics || !Array.isArray(topics) || equalArray(topics, topicList)) {\r\n      return;\r\n    }\r\n\r\n    setPage(1);\r\n    setMore(true);\r\n    setList([]);\r\n    setTopicList([...topics]);\r\n    totalPage.current = 0;\r\n  };\r\n\r\n  // get total sentence\r\n  useEffect(() => {\r\n    let isSub = true;\r\n\r\n    (async function () {\r\n      try {\r\n        const apiRes = await sentenceApi.getTotalSentences(topicList);\r\n\r\n        if (apiRes.status === 200 && isSub) {\r\n          const { total = 0 } = apiRes.data;\r\n          totalPage.current = Math.ceil(total / perPage);\r\n        }\r\n      } catch (error) {}\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, [topicList]);\r\n\r\n  // get sentence list\r\n  useEffect(() => {\r\n    let isSub = true;\r\n\r\n    (async function () {\r\n      try {\r\n        setLoading(true);\r\n        const apiRes = await sentenceApi.getSentenceList(\r\n          page,\r\n          perPage,\r\n          topicList,\r\n        );\r\n        if (apiRes.status === 200 && isSub) {\r\n          const { sentenceList = [] } = apiRes.data;\r\n          setList([...list, ...sentenceList]);\r\n        }\r\n      } catch (error) {\r\n      } finally {\r\n        if (isSub) {\r\n          setLoading(false);\r\n          isFirstLoad && setIsFirstLoad(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, [page, topicList]);\r\n\r\n  return (\r\n    <CommunicationPhrase\r\n      list={list}\r\n      isFirstLoad={isFirstLoad}\r\n      loading={loading}\r\n      more={more}\r\n      onLoadData={nextPage}\r\n      onSelectTopic={(v) => onSelectTopic(v)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CommunicationPhraseData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}