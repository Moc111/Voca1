{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuAn\\\\TKwebsite3\\\\dynonary-english\\\\frontend\\\\src\\\\components\\\\DynoDictionary\\\\Item\\\\data.js\",\n  _s = $RefreshSig$();\nimport wordApi from 'apis/wordApi';\nimport WordDetailModal from 'components/UI/WordDetailModal';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport DynoDictionaryItem from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DynoDictionaryItemData(props) {\n  _s();\n  const [modal, setModal] = useState({\n    loading: false,\n    open: false\n  });\n  const dispatch = useDispatch();\n  const onShowDetail = async word => {\n    try {\n      setModal({\n        open: true,\n        loading: true\n      });\n      const apiRes = await wordApi.getWordDetails(word);\n      if (apiRes.status === 200) {\n        setModal({\n          open: true,\n          loading: false,\n          ...apiRes.data\n        });\n      }\n    } catch (error) {\n      setModal({\n        open: false,\n        loading: false\n      });\n      dispatch(setMessage({\n        type: 'error',\n        message: 'Không thể lấy thông tin, thử lại.'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DynoDictionaryItem, {\n      ...props,\n      onShowDetail: onShowDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), modal.open && /*#__PURE__*/_jsxDEV(WordDetailModal, {\n      ...modal,\n      onClose: () => setModal({\n        open: false,\n        loading: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(DynoDictionaryItemData, \"gL0252OsbiAnfLWO0vixCbqYh8k=\", false, function () {\n  return [useDispatch];\n});\n_c = DynoDictionaryItemData;\nexport default DynoDictionaryItemData;\nvar _c;\n$RefreshReg$(_c, \"DynoDictionaryItemData\");","map":{"version":3,"names":["wordApi","WordDetailModal","React","useState","useDispatch","setMessage","DynoDictionaryItem","jsxDEV","_jsxDEV","Fragment","_Fragment","DynoDictionaryItemData","props","_s","modal","setModal","loading","open","dispatch","onShowDetail","word","apiRes","getWordDetails","status","data","error","type","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/DuAn/TKwebsite3/dynonary-english/frontend/src/components/DynoDictionary/Item/data.js"],"sourcesContent":["import wordApi from 'apis/wordApi';\r\nimport WordDetailModal from 'components/UI/WordDetailModal';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMessage } from 'redux/slices/message.slice';\r\nimport DynoDictionaryItem from '.';\r\n\r\nfunction DynoDictionaryItemData(props) {\r\n  const [modal, setModal] = useState({ loading: false, open: false });\r\n  const dispatch = useDispatch();\r\n\r\n  const onShowDetail = async (word) => {\r\n    try {\r\n      setModal({ open: true, loading: true });\r\n      const apiRes = await wordApi.getWordDetails(word);\r\n      if (apiRes.status === 200) {\r\n        setModal({ open: true, loading: false, ...apiRes.data });\r\n      }\r\n    } catch (error) {\r\n      setModal({ open: false, loading: false });\r\n      dispatch(\r\n        setMessage({\r\n          type: 'error',\r\n          message: 'Không thể lấy thông tin, thử lại.',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DynoDictionaryItem {...props} onShowDetail={onShowDetail} />\r\n\r\n      {modal.open && (\r\n        <WordDetailModal\r\n          {...modal}\r\n          onClose={() => setModal({ open: false, loading: false })}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DynoDictionaryItemData;\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,4BAA4B;AACvD,OAAOC,kBAAkB,MAAM,GAAG;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,OAAO,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAC;EACnE,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACFL,QAAQ,CAAC;QAAEE,IAAI,EAAE,IAAI;QAAED,OAAO,EAAE;MAAK,CAAC,CAAC;MACvC,MAAMK,MAAM,GAAG,MAAMrB,OAAO,CAACsB,cAAc,CAACF,IAAI,CAAC;MACjD,IAAIC,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBR,QAAQ,CAAC;UAAEE,IAAI,EAAE,IAAI;UAAED,OAAO,EAAE,KAAK;UAAE,GAAGK,MAAM,CAACG;QAAK,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,QAAQ,CAAC;QAAEE,IAAI,EAAE,KAAK;QAAED,OAAO,EAAE;MAAM,CAAC,CAAC;MACzCE,QAAQ,CACNb,UAAU,CAAC;QACTqB,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACF,kBAAkB;MAAA,GAAKM,KAAK;MAAEO,YAAY,EAAEA;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5DlB,KAAK,CAACG,IAAI,iBACTT,OAAA,CAACP,eAAe;MAAA,GACVa,KAAK;MACTmB,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC;QAAEE,IAAI,EAAE,KAAK;QAAED,OAAO,EAAE;MAAM,CAAC;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACF;EAAA,eACD,CAAC;AAEP;AAACnB,EAAA,CAlCQF,sBAAsB;EAAA,QAEZP,WAAW;AAAA;AAAA8B,EAAA,GAFrBvB,sBAAsB;AAoC/B,eAAeA,sBAAsB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}