{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuAn\\\\thangdoan\\\\dynonary-english\\\\frontend\\\\src\\\\components\\\\UI\\\\WordFavorite.js\",\n  _s = $RefreshSig$();\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport UnFavoriteIcon from '@material-ui/icons/FavoriteBorder';\nimport accountApi from 'apis/accountApi';\nimport { ROUTES } from 'constant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport { setAddFavorites } from 'redux/slices/userInfo.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WordFavorite({\n  word\n}) {\n  _s();\n  const {\n    isAuth,\n    username,\n    favoriteList\n  } = useSelector(state => state.userInfo);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isFavorite = favoriteList.findIndex(i => i.toLowerCase() === word.toLowerCase()) !== -1;\n  const handleClick = async () => {\n    try {\n      const apiRes = await accountApi.putToggleWordFavorite(username, word, !isFavorite);\n      if (apiRes.status === 200) {\n        dispatch(setAddFavorites({\n          word,\n          isAdd: !isFavorite\n        }));\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isAuth ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isFavorite ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        onClick: handleClick,\n        className: \"dyno-favorite active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(UnFavoriteIcon, {\n        onClick: handleClick,\n        className: \"dyno-favorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(UnFavoriteIcon, {\n      onClick: () => history.push(ROUTES.LOGIN),\n      className: \"dyno-favorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(WordFavorite, \"aBBYEXICya5Tp65wBwejaddCsg8=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n_c = WordFavorite;\nWordFavorite.propTypes = {\n  word: PropTypes.string\n};\nWordFavorite.defaultProps = {\n  word: ''\n};\nexport default WordFavorite;\nvar _c;\n$RefreshReg$(_c, \"WordFavorite\");","map":{"version":3,"names":["FavoriteIcon","UnFavoriteIcon","accountApi","ROUTES","PropTypes","React","useDispatch","useSelector","useHistory","setMessage","setAddFavorites","jsxDEV","_jsxDEV","Fragment","_Fragment","WordFavorite","word","_s","isAuth","username","favoriteList","state","userInfo","history","dispatch","isFavorite","findIndex","i","toLowerCase","handleClick","apiRes","putToggleWordFavorite","status","isAdd","error","_error$response","_error$response$data","message","response","data","type","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","push","LOGIN","_c","propTypes","string","defaultProps","$RefreshReg$"],"sources":["D:/DuAn/thangdoan/dynonary-english/frontend/src/components/UI/WordFavorite.js"],"sourcesContent":["import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport UnFavoriteIcon from '@material-ui/icons/FavoriteBorder';\r\nimport accountApi from 'apis/accountApi';\r\nimport { ROUTES } from 'constant';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setMessage } from 'redux/slices/message.slice';\r\nimport { setAddFavorites } from 'redux/slices/userInfo.slice';\r\n\r\nfunction WordFavorite({ word }) {\r\n  const { isAuth, username, favoriteList } = useSelector(\r\n    (state) => state.userInfo,\r\n  );\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const isFavorite =\r\n    favoriteList.findIndex((i) => i.toLowerCase() === word.toLowerCase()) !==\r\n    -1;\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const apiRes = await accountApi.putToggleWordFavorite(\r\n        username,\r\n        word,\r\n        !isFavorite,\r\n      );\r\n      if (apiRes.status === 200) {\r\n        dispatch(setAddFavorites({ word, isAdd: !isFavorite }));\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Thất bại, thử lại !';\r\n      dispatch(setMessage({ type: 'error', message }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuth ? (\r\n        <>\r\n          {isFavorite ? (\r\n            <FavoriteIcon\r\n              onClick={handleClick}\r\n              className=\"dyno-favorite active\"\r\n            />\r\n          ) : (\r\n            <UnFavoriteIcon onClick={handleClick} className=\"dyno-favorite\" />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <UnFavoriteIcon\r\n          onClick={() => history.push(ROUTES.LOGIN)}\r\n          className=\"dyno-favorite\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nWordFavorite.propTypes = {\r\n  word: PropTypes.string,\r\n};\r\n\r\nWordFavorite.defaultProps = {\r\n  word: '',\r\n};\r\n\r\nexport default WordFavorite;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}